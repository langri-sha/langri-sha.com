# Build configuration overview: https://cloud.google.com/cloud-build/docs/build-config
# Cloud builders: https://cloud.google.com/cloud-build/docs/cloud-builders

steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Configure environment'
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e

        case $TRIGGER_NAME in
          workspace-pull-request)
            echo "gs://$_PREVIEW_BUCKET/$_PR_NUMBER" > /var/share/bucket
            echo "gs://$_PREVIEW_ASSETS_BUCKET/$_PR_NUMBER" > /var/share/assets-bucket
            echo "$_PREVIEW/$_PR_NUMBER" > /var/share/url
            echo "$_PREVIEW_ASSETS_URL/$_PR_NUMBER" > /var/share/assets-url
            ;;

          workspace-push)
            echo "gs://$_PREVIEW_BUCKET" > /var/share/bucket
            echo "gs://$_PREVIEW_ASSETS_BUCKET" > /var/share/assets-bucket
            echo "$_PREVIEW" > /var/share/url
            echo "$_PREVIEW_ASSETS_URL" > /var/share/assets-url
            ;;

          workspace-release)
            echo "gs://$_PRODUCTION_BUCKET" > /var/share/bucket
            echo "gs://$_PRODUCTION_ASSETS_BUCKET" > /var/share/assets-bucket
            echo "$_PRODUCTION_URL" > /var/share/url
            echo "$_PRODUCTION_ASSETS_URL" > /var/share/assets-url
            ;;

          *)
            echo -n "Unsupported trigger name"
            exit 1
            ;;
        esac
    waitFor: ['-']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build image'
    args: ['compose', 'build', 'pnpm']
    waitFor: ['-']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Prepare image'
    entrypoint: '/bin/bash'
    args:
      - -c
      - |
        docker commit --change "USER root" $(docker create gcr.io/$PROJECT_ID/pnpm:latest) gcr.io/$PROJECT_ID/pnpm:latest
    waitFor: ['Build image']

  - name: 'gcr.io/$PROJECT_ID/pnpm'
    id: 'PNPM install'
    args: ['install']
    waitFor: ['Configure environment', 'Prepare image']

  - name: 'gcr.io/$PROJECT_ID/pnpm'
    id: 'ESLint'
    args: ['eslint', '.']
    waitFor: ['PNPM install']

  - name: 'gcr.io/$PROJECT_ID/pnpm'
    id: 'Jest'
    args: ['jest', '--passWithNoTests']
    waitFor: ['PNPM install']

  - name: 'gcr.io/$PROJECT_ID/pnpm'
    id: 'Beachball check'
    entrypoint: ash
    args:
      - -c
      - |
        if [ -n "$_PR_NUMBER" ]; then
          pnpm beachball check || \
          echo "Beachball changes detected. Run 'pnpm beachball change' and commit the changes."
        fi
    waitFor: ['PNPM install']

  - name: 'gcr.io/$PROJECT_ID/pnpm'
    id: 'TypeScript'
    args: ['tsc', '--build', '.']
    waitFor: ['PNPM install']

  - name: 'node:current'
    id: 'Sort packages'
    args:
      [
        'npx',
        'sort-package-json',
        '--check',
        '**/apps/*/package.json',
        '**/packages/*/package.json',
        'package.json',
      ]
    waitFor: ['PNPM install']

  - name: 'gcr.io/$PROJECT_ID/pnpm'
    id: 'Build'
    args: ['build']
    waitFor: ['PNPM install']

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Publish'
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e

        gsutil -u $PROJECT_ID -qm rsync -r -j $$GZIP_TYPES -x gz apps/web/dist/ $(cat /var/share/bucket)
    waitFor: []

options:
  env:
    - COMPOSE_DOCKER_CLI_BUILD=1
    - DOCKER_BUILDKIT=1
    - GZIP_TYPES=css,eot,html,js,json,otf,svg,ttf,txt
    - PROJECT_ID=$PROJECT_ID
  volumes:
    - name: share
      path: /var/share
