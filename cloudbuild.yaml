# Build configuration overview: https://cloud.google.com/cloud-build/docs/build-config
# Cloud builders: https://cloud.google.com/cloud-build/docs/cloud-builders

steps:
  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Configure environment'
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e

        case $TRIGGER_NAME in
          workspace-pull-request)
            echo "gs://$_PREVIEW_BUCKET/$_PR_NUMBER" > /var/share/bucket
            echo "gs://$_PREVIEW_ASSETS_BUCKET/$_PR_NUMBER" > /var/share/assets-bucket
            echo "$_PREVIEW/$_PR_NUMBER" > /var/share/url
            echo "$_PREVIEW_ASSETS_URL/$_PR_NUMBER" > /var/share/assets-url
            ;;

          workspace-push)
            echo "gs://$_PREVIEW_BUCKET" > /var/share/bucket
            echo "gs://$_PREVIEW_ASSETS_BUCKET" > /var/share/assets-bucket
            echo "$_PREVIEW" > /var/share/url
            echo "$_PREVIEW_ASSETS_URL" > /var/share/assets-url
            ;;

          workspace-release)
            echo "gs://$_PRODUCTION_BUCKET" > /var/share/bucket
            echo "gs://$_PRODUCTION_ASSETS_BUCKET" > /var/share/assets-bucket
            echo "$_PRODUCTION_URL" > /var/share/url
            echo "$_PRODUCTION_ASSETS_URL" > /var/share/assets-url
            ;;

          *)
            echo -n "Unsupported trigger name"
            exit 1
            ;;
        esac
    waitFor: ['-']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Pull image'
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e

        TAG=$({ (md5sum cloudbuild.yaml); (md5sum docker-compose.yml) ; (md5sum Dockerfile) } | md5sum | awk '{print $$1}')

        echo -e "$$TAG\c" > /var/share/tag

        if docker pull gcr.io/$PROJECT_ID/yarn:$$TAG; then
          echo "Successfully pulled image"
          touch /var/share/pull
        fi
    waitFor: ['-']

  - name: 'gcr.io/kaniko-project/executor:debug'
    id: 'Build image'
    entrypoint: /busybox/sh
    args:
      - -c
      - |
        if [ -f /var/share/pull ]; then
          echo "Image already exists, skipping build"
        else
          executor \
            --build-arg="alpine_version=$$(eval $$ALPINE_VERSION)" \
            --build-arg="glibc_version=$$(eval $$GLIBC_VERSION)" \
            --build-arg="node_version=$$(eval $$NODE_VERSION)" \
            --build-arg="uid=0" \
            --destination=gcr.io/$PROJECT_ID/yarn:$(cat /var/share/tag) \
            --cache=true
        fi
    waitFor: ['Pull image']

  - name: 'gcr.io/cloud-builders/docker'
    id: 'Tag image'
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e

        if [ ! -f /var/share/pull ]; then
          docker pull gcr.io/$PROJECT_ID/yarn:$(cat /var/share/tag)
        fi

        docker commit --change "USER root" $(docker create gcr.io/$PROJECT_ID/yarn:$(cat /var/share/tag)) gcr.io/$PROJECT_ID/yarn:latest
    waitFor: ['Build image']

  - name: 'gcr.io/$PROJECT_ID/yarn'
    id: 'Yarn install'
    args: ['install']
    waitFor: ['Configure environment', 'Tag image']

  - name: 'gcr.io/$PROJECT_ID/yarn'
    id: 'ESLint'
    args: ['eslint', '--ext', 'js,jsx', '.']
    waitFor: ['Yarn install']

  - name: 'gcr.io/$PROJECT_ID/yarn'
    id: 'Prettier check'
    args: ['prettier', '--check', '.']
    waitFor: ['Yarn install']

  - name: 'gcr.io/$PROJECT_ID/yarn'
    id: 'Build'
    args: ['build']
    waitFor: ['Yarn install']

  - name: 'gcr.io/cloud-builders/gcloud'
    id: 'Publish'
    entrypoint: /bin/bash
    args:
      - -c
      - |
        set -e

        gsutil -u $PROJECT_ID -qm rsync -r -j $$GZIP_TYPES -x gz dist/ $(cat /var/share/bucket)

    waitFor: ['Build']

options:
  env:
    - ALPINE_VERSION=cat docker-compose.yml | grep alpine_version | cut -d ':'
      -f 2 | xargs
    - GLIBC_VERSION=cat docker-compose.yml | grep glibc_version | cut -d ':' -f
      2 | xargs
    - GZIP_TYPES=css,eot,html,js,json,otf,svg,ttf,txt
    - NODE_VERSION=cat docker-compose.yml | grep node_version | cut -d ':' -f 2
      | xargs
  volumes:
    - name: share
      path: /var/share
