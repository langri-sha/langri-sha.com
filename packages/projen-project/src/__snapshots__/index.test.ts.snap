// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`add subproject 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
!.github/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "someproject/@some/test/.gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/tsconfig.json
",
  "someproject/@some/test/.projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "tsconfig.json",
    ],
  },
  "someproject/@some/test/.projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "cwd": "../../..",
            "exec": "npx projen default",
          },
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "someproject/@some/test/tsconfig.json": {
    "$schema": "https://json.schemastore.org/tsconfig",
    "compilerOptions": {
      "baseUrl": ".",
      "outDir": ".tsbuild",
    },
    "extends": "@langri-sha/tsconfig/project.json",
  },
}
`;

exports[`defaults 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
!.github/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
}
`;

exports[`with Beachball configuration 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
*.tsbuildinfo
!.github/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/package.json
!/tsconfig.json
!/beachball.config.js
",
  ".projen/deps.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "dependencies": [
      {
        "name": "@langri-sha/projen-project",
        "type": "build",
        "version": "*",
      },
      {
        "name": "@langri-sha/tsconfig",
        "type": "build",
        "version": "*",
      },
      {
        "name": "beachball",
        "type": "build",
        "version": "2.43.1",
      },
      {
        "name": "projen",
        "type": "build",
        "version": "0.81.13",
      },
      {
        "name": "ts-node",
        "type": "build",
        "version": "10.9.2",
      },
      {
        "name": "typescript",
        "type": "build",
        "version": "5.4.5",
      },
    ],
  },
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "beachball.config.js",
      "tsconfig.json",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "install": {
        "description": "Install project dependencies and update lockfile (non-frozen)",
        "name": "install",
        "steps": [
          {
            "exec": "pnpm i --no-frozen-lockfile",
          },
        ],
      },
      "install:ci": {
        "description": "Install project dependencies using frozen lockfile",
        "name": "install:ci",
        "steps": [
          {
            "exec": "pnpm i --frozen-lockfile",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "beachball.config.js": "/** @type {import('beachball').BeachballConfig} */
module.exports = {
  "branch": "origin/main",
  "gitTags": false,
  "ignorePatterns": [
    "*.test.*",
    ".*/**",
    "__snapshots__/",
    "dist/",
    "node_modules/"
  ]
}",
  "package.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "devDependencies": {
      "@langri-sha/projen-project": "*",
      "@langri-sha/tsconfig": "*",
      "beachball": "2.43.1",
      "projen": "0.81.13",
      "ts-node": "10.9.2",
      "typescript": "5.4.5",
    },
    "engines": {
      "node": ">= 20.12.0",
    },
    "license": "Apache-2.0",
    "main": "src/index.ts",
    "name": "test-project",
    "pnpm": {},
    "scripts": {
      "default": "npx projen default",
    },
    "version": "0.0.0",
  },
  "tsconfig.json": {
    "$schema": "https://json.schemastore.org/tsconfig",
    "extends": "@langri-sha/tsconfig",
    "files": [
      "beachball.config.js",
    ],
  },
}
`;

exports[`with EditorConfig options 1`] = `
{
  ".editorconfig": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

root=true

[*]
charset=utf-8
end_of_line=lf
indent_style=space
indent_size=2
insert_final_newline=true
trim_trailing_whitespace=true

[Dockerfile]
indent_style=tab
",
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
!.github/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/.editorconfig
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".editorconfig",
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
}
`;

exports[`with Husky options 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
!.github/
!.husky/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/package.json
",
  ".husky/pre-commit": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
lint-staged
",
  ".projen/deps.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "dependencies": [
      {
        "name": "@langri-sha/projen-project",
        "type": "build",
        "version": "*",
      },
      {
        "name": "husky",
        "type": "build",
        "version": "9.0.11",
      },
      {
        "name": "projen",
        "type": "build",
        "version": "0.81.13",
      },
    ],
  },
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".husky/pre-commit",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "install": {
        "description": "Install project dependencies and update lockfile (non-frozen)",
        "name": "install",
        "steps": [
          {
            "exec": "pnpm i --no-frozen-lockfile",
          },
        ],
      },
      "install:ci": {
        "description": "Install project dependencies using frozen lockfile",
        "name": "install:ci",
        "steps": [
          {
            "exec": "pnpm i --frozen-lockfile",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "package.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "devDependencies": {
      "@langri-sha/projen-project": "*",
      "husky": "9.0.11",
      "projen": "0.81.13",
    },
    "engines": {
      "node": ">= 20.12.0",
    },
    "license": "Apache-2.0",
    "main": "src/index.ts",
    "name": "test-project",
    "scripts": {
      "default": "npx projen default",
      "prepare": "husky",
    },
    "version": "0.0.0",
  },
}
`;

exports[`with Renovate options 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
!.github/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/renovate.json5
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "renovate.json5",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "renovate.json5": {
    "$schema": "https://docs.renovatebot.com/renovate-schema.json",
    "configMigration": true,
    "customManagers": [
      {
        "customType": "regex",
        "datasourceTemplate": "npm",
        "fileMatch": [
          "projen.*.(js|cjs|mjs|ts|mts|cts)$",
        ],
        "matchStrings": [
          "\\.add[\\w]*Deps\\('(?<depName>[a-zA-Z0-9-]+)@(?<currentValue>[^']+)'\\)",
        ],
      },
    ],
    "extends": [
      "config:recommended",
    ],
    "labels": [
      "dependencies",
    ],
    "reviewersFromCodeOwners": true,
  },
}
`;

exports[`with Terraform enabled 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
!.terraform.lock.hcl
*.db
*.log
!.github/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
}
`;

exports[`with TypeScript options 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
*.tsbuildinfo
!.github/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/package.json
!/tsconfig.json
",
  ".projen/deps.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "dependencies": [
      {
        "name": "@langri-sha/projen-project",
        "type": "build",
        "version": "*",
      },
      {
        "name": "@langri-sha/tsconfig",
        "type": "build",
        "version": "*",
      },
      {
        "name": "projen",
        "type": "build",
        "version": "0.81.13",
      },
      {
        "name": "ts-node",
        "type": "build",
        "version": "10.9.2",
      },
      {
        "name": "typescript",
        "type": "build",
        "version": "5.4.5",
      },
    ],
  },
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "tsconfig.json",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "install": {
        "description": "Install project dependencies and update lockfile (non-frozen)",
        "name": "install",
        "steps": [
          {
            "exec": "pnpm i --no-frozen-lockfile",
          },
        ],
      },
      "install:ci": {
        "description": "Install project dependencies using frozen lockfile",
        "name": "install:ci",
        "steps": [
          {
            "exec": "pnpm i --frozen-lockfile",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "package.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "devDependencies": {
      "@langri-sha/projen-project": "*",
      "@langri-sha/tsconfig": "*",
      "projen": "0.81.13",
      "ts-node": "10.9.2",
      "typescript": "5.4.5",
    },
    "engines": {
      "node": ">= 20.12.0",
    },
    "license": "Apache-2.0",
    "main": "src/index.ts",
    "name": "test-project",
    "pnpm": {},
    "scripts": {
      "default": "npx projen default",
    },
    "version": "0.0.0",
  },
  "tsconfig.json": {
    "$schema": "https://json.schemastore.org/tsconfig",
    "extends": "@langri-sha/tsconfig",
    "files": [
      "foo.js",
      "bar.js",
    ],
  },
}
`;

exports[`with code owners configured 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
!.github/
!.projen/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/CODEOWNERS
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "CODEOWNERS",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "CODEOWNERS": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
* @admin
",
}
`;

exports[`with workspaces 1`] = `
{
  ".gitignore": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".
.*
!.babelrc
!.dockerignore
!.editorconfig
!.gitattributes
!.gitignore
!.gitkeep
!.npmignore
!.openssl
!.prettierignore
!.projenrc*
*.db
*.log
!.github/
!.projen/
packages/*/lib/
node_modules/
!/.gitattributes
!/.projen/tasks.json
!/.projen/deps.json
!/.projen/files.json
!/pnpm-workspace.yaml
",
  ".projen/files.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "files": [
      ".gitattributes",
      ".gitignore",
      ".projen/deps.json",
      ".projen/files.json",
      ".projen/tasks.json",
      "pnpm-workspace.yaml",
    ],
  },
  ".projen/tasks.json": {
    "//": "~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".",
    "tasks": {
      "default": {
        "description": "Synthesize project files",
        "name": "default",
        "steps": [
          {
            "exec": "node --loader ts-node/esm .projenrc.mts",
          },
        ],
      },
      "test": {
        "description": "Run tests",
        "name": "test",
      },
    },
  },
  "pnpm-workspace.yaml": "# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

packages:
  - packages/*
",
}
`;
